
#
#   EXAMPLE.JIG: an example config. file for JIGSAW-GEO
#

#   To run this example, navigate to the directory containing this file 
#   and run the following from the cmd line:
#
#   On WIN-64 platforms:
#
#       bin\WIN-64\jigsaw-geo64r.exe example.jig
#
#   On LNX-64 platforms:
#
#       bin/LNX-64/jigsaw-geo64r     example.jig
#
#   This command calls JIGSAW-GEO using the configuration data contain-
#   ed in "example.jig", which, in its unmodified form, builds a sample 
#   regionally-refined grid, incorporating a smooth transition to high-
#   resolution in the North Atlantic region.  
#

#   The subsequent sections contain an explanation of the various confi-
#   guration options available for JIGSAW-GEO. Simply uncomment a given 
#   option and re-run JIGSAW-GEO to explore its effect.
# 

#   REQUIRED fields:
#   ---------------
#

#   ---> GEOM_FILE - 'GEOMNAME.MSH', a string containing the name of the 
#       geometry file (is required at input).
#
    
    geom_file = geo/bunny.msh

#   ---> MESH_FILE - 'MESHNAME.MSH', a string containing the name of the 
#       output file (will be created on output).
#

    mesh_file = out/bunny.msh


#   OPTIONAL fields (GEOM):
#   ----------------------
#

#   ---> GEOM_SEED - {default=8} number of "seed" vertices used to init-
#       ialise mesh generation.
#

#   geom_seed = 16

#   ---> GEOM_FEAT - {default=false} attempt to auto-detect sharp "feat-
#       ures" in the input geometry. Features can be adjacent to 1-dim.
#       entities, (i.e. geometry "edges") and/or 2-dim. entities, (i.e.
#       geometry "faces") based on both geometrical and/or topological
#       constraints. Geometrically, features are located between any ne-
#       ighbouring entities that subtend angles less than GEOM_ETAX deg-
#       rees, where X is the (topological) dimension of the feature. To-
#       pologically, features are located at the apex of any non-manifo-
#       ld connections.
#
 
#   geom_feat = true
 
#   ---> GEOM_ETA1 - {default=45deg} 1-dim. feature-angle, features are 
#       located between any neighbouring "edges" that subtend angles le-
#       ss than GEOM_ETA1 degrees.
#
 
#   geom_eta1 = 60
 
#   ---> GEOM_ETA2 - {default=45deg} 2-dim. feature angle, features are 
#       located between any neighbouring "faces" that subtend angles le-
#       ss than GEOM_ETA2 degrees.
#

#   geom_eta2 = 60


#   OPTIONAL fields (HFUN):
#   ----------------------
#

#   ---> HFUN_KERN - {default='constant'} mesh-size kernal, choice betw-
#       een a constant size-function (KERN='constant') and a Delaunay-
#       based medial-axis method (KERN='delaunay') that attempts to aut-
#       omatically generate geometry-adaptive sizing data.
#

#   hfun_kern = delaunay

#   ---> HFUN_SCAL - {default='relative'} scaling type for mesh-size fu-
#       ction. SCAL='relative' interprets mesh-size values as percentag-
#       es of the (mean) length of the axis-aligned bounding-box (AABB)
#       for the geometry. SCAL='absolute' interprets mesh-size values as
#       absolute measures.
#

#   hfun_scal = relative

#   ---> HFUN_HMAX - {default=0.02} max. mesh-size function value. Inte-
#       rpreted based on HFUN_SCAL setting.
#

    hfun_hmax = 0.03

#   ---> HFUN_HMIN - {default=0.00} min. mesh-size function value. Inte-
#       rpreted based on HFUN_SCAL setting.
#

#   hfun_hmin = 0.01

#   ---> HFUN_GRAD - {default=0.25} max. allowable gradient in the mesh-
#       size function. 
#

#   hfun_grad = 0.15


#   OPTIONAL fields (MESH):
#   ----------------------
#

#   ---> MESH_DIMS - {default=3} number of "topological" dimensions to 
#       mesh. DIMS=K meshes K-dimensional features, irrespective of the
#       number of spatial dimensions of the problem (i.e. if the geomet-
#       ry is 3-dimensional and DIMS=2 a surface mesh will be produced).
#

#   mesh_dims = 2

#   ---> MESH_KERN - {default='delfront'} meshing kernal, choice of the
#       standard Delaunay-refinement algorithm (KERN='delaunay') or the 
#       Frontal-Delaunay method (KERN='delfront').
#

#   mesh_kern = delaunay

#   ---> MESH_ITER - {default=+INF} max. number of mesh refinement iter-
#       ations. Set ITER=N to see progress after N iterations. 
#

#   mesh_iter = 1000

#   ---> MESH_TOP1 - {default=false} enforce 1-dim. topological constra-
#       ints. 1-dim. edges are refined until all embedded nodes are "lo-
#       cally 1-manifold", i.e. nodes are either centred at topological
#       "features", or lie on 1-manifold complexes.
#
 
#   mesh_top1 = true
 
#   ---> MESH_TOP2 - {default=false} enforce 2-dim. topological constra-
#       ints. 2-dim. trias are refined until all embedded nodes are "lo-
#       cally 2-manifold", i.e. nodes are either centred at topological
#       "features", or lie on 2-manifold complexes.
#

#   mesh_top2 = true

#   ---> MESH_RAD2 - {default=1.05} max. radius-edge ratio for 2-tria 
#       elements. 2-trias are refined until the ratio of the element ci-
#       rcumradius to min. edge length is less-than MESH_RAD2.
#

#   mesh_rad2 = 1.50

#   ---> MESH_RAD3 - {default=2.05} max. radius-edge ratio for 3-tria 
#       elements. 3-trias are refined until the ratio of the element ci-
#       rcumradius to min. edge length is less-than MESH_RAD3.
#

#   mesh_rad3 = 3.00

#   ---> MESH_EPS1 - {default=0.33} max. surface-discretisation error
#       multiplier for 1-edge elements. 1-edge elements are refined unt-
#       il the surface-disc. error is less-than MESH_EPS1 * HFUN(X).
#

#   mesh_eps1 = 0.20

#   ---> MESH_EPS2 - {default=0.33} max. surface-discretisation error 
#       multiplier for 2-tria elements. 2-tria elements are refined unt-
#       il the surface-disc. error is less-than MESH_EPS2 * HFUN(X).
#

#   mesh_eps2 = 0.20

#   ---> MESH_VOL3 - {default=0.00} min. volume-length ratio for 3-tria
#       elements. 3-tria elements are refined until the volume-length 
#       ratio exceeds MESH_VOL3. Can be used to supress "sliver" elemen-
#       ts
#

#   mesh_vol3 = 0.05

#   OPTIONAL fields (MISC):
#   ----------------------
#

#   ---> VERBOSITY - {default=0} verbosity of log-file output generated
#       by JIGSAW. Set VERBOSITY>0 to print additional output.
#

#   verbosity = 1



